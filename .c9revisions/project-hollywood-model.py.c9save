{"ts":1375383197328,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"#coding=UTF-8\n\n#MASTER MODEL FILE\n\n# NAPOMENA!!! - Sve mapirane informacije koje se koriste u aplikaciji trebaju biti hardcoded, tj. u samom aplikativnom codu a ne u settings.py\n# u settings.py se cuvaju one informacije koje se ne cuvaju u datastore i koje se ne koriste u izgradnji datastore recorda...\n\nfrom google.appengine.ext import blobstore\nfrom google.appengine.ext import ndb\nfrom decimal import *\n\n'''\nOvo su zabranjena imena propertija:\n\nall\napp\ncopy\ndelete\nentity\nentity_type\nfields\nfrom_entity\nget\ngql\ninstance_properties\nis_saved\nkey\nkey_name\nkind\nparent\nparent_key\nproperties\nput\nsetdefault\nto_xml\nupdate\n'''\n\ndatastore_key_kinds = {\n    'ObjectLog':0,\n    'User':1,\n    'UserEmail':2,\n    'UserIdentity':3,\n    'UserIPAddress':4,\n    'UserRole':5,\n    'AggregateUserPermission':6,\n    'Role':7,\n    'Country':8,\n    'CountrySubdivision':9,\n    'Content':10,\n    'SupportRequest':11,\n    'FeedbackRequest':12,\n    'Image':13,\n    'ProductCategory':14,\n    'ProductUOMCategory':15,\n    'ProductUOM':16,\n    'BuyerAddress':17,\n    'BuyerCollection':18,\n    \n    \n    'Notification':1,\n    'NotificationRecipient':1,\n    'NotificationOutlet':1,\n    'Location':1,\n    'Store':1,\n    'StoreContent':1,\n    'StoreTax':1,\n    'StoreCarrier':1,\n    'StoreCarrierLine':1,\n    'StoreCarrierPricelist':1,\n    \n    'Currency':1,\n    'Order':1,\n    'OrderReference':1,\n    'OrderAddress':1,\n    'OrderLine':1,\n    'OrderLineReference':1,\n    'OrderLineTax':1,\n    'PayPalTransaction':1,\n    'BillingLog':1,\n    'BillingCreditAdjustment':1,\n    'OrderFeedback':1,\n    'Catalog':1,\n    'CatalogContent':1,\n    'CatalogPricetag':1,\n    'ProductTemplate':1,\n    'ProductInstance':1,\n    'ProductInstanceInventory':1,\n    'ProductContent':1,\n    'ProductVariant':1,\n    'ProductTemplateVariant':1,\n}\n\n\nclass DecimalProperty(ndb.StringProperty):\n  def _validate(self, value):\n    if not isinstance(value, (decimal.Decimal)):\n      raise TypeError('expected an decimal, got %s' % repr(value))\n\n  def _to_base_type(self, value):\n    return str(value) # Doesn't matter if it's a decimal or string\n\n  def _from_base_type(self, value):\n    return decimal.Decimal(value)  # Always return a decimal\n\n\nclass ObjectLog(ndb.Expando):\n    \n    # ancestor Any - ancestor je objekat koji se ujedno i pickle u log property, ukljucujuci i njegovu hiejrarhiju - napr: 'User-UserLog-ObjectLog'\n    # reference i type izvlacimo iz kljuca - key.parent()\n    # posible composite indexes ???\n    logged = ndb.DateTimeProperty('1', auto_now_add=True, required=True)\n    agent = ndb.KeyProperty('2', kind=User, required=True)\n    action = ndb.IntegerProperty('3', required=True)\n    state = ndb.IntegerProperty('4', required=True)\n    #_default_indexed = False\n    #pass\n    #message / m = ndb.TextProperty('5')# max size 64kb - to determine char count\n    #note / n = ndb.TextProperty('6')# max size 64kb - to determine char count\n    #log / l = ndb.TextProperty('7')\n    \n    # ovako se smanjuje storage u Datastore, i trebalo bi sprovesti to isto na sve modele\n    @classmethod\n    def _get_kind(cls):\n      return datastore_key_kinds.ObjectLog\n\n\n# ovo ce biti sistem za slanje poruka userima preko odredjenog outleta\n# ostavicemo ga za kasnije posto nismo upoznati detaljno sa task queue\nclass Message(ndb.Model):\n    \n    # root\n    outlet = ndb.IntegerProperty('1', required=True)\n    group = ndb.IntegerProperty('2', required=True)\n    state = ndb.IntegerProperty('3', required=True)\n\n\nclass MessageRecepient(ndb.Model):\n    \n    # ancestor Message\n    recepient = ndb.KeyProperty('1', kind=User, required=True)\n    sent = ndb.DateTimeProperty('2', auto_now_add=True, required=True)\n\n\nclass FeedbackRequest(ndb.Model):\n    \n    # ancestor User\n    reference = ndb.StringProperty('1', required=True, indexed=False)\n    state = ndb.IntegerProperty('2', required=True)\n    updated = ndb.DateTimeProperty('3', auto_now=True, required=True)\n    created = ndb.DateTimeProperty('4', auto_now_add=True, required=True)\n    \n    # primer helper funkcije u slucajevima gde se ne koristi ancestor mehanizam za pristup relacijama\n    @property\n    def logs(self):\n      return ObjectLog.query(ancestor = self.key())\n\n\nclass SupportRequest(ndb.Model):\n    \n    # ancestor User\n    reference = ndb.StringProperty('1', required=True, indexed=False)\n    state = ndb.IntegerProperty('2', required=True)\n    updated = ndb.DateTimeProperty('3', auto_now=True, required=True)\n    created = ndb.DateTimeProperty('4', auto_now_add=True, required=True)\n\n\nclass Content(ndb.Model):\n    \n    # root\n    # composite index category+state+sequence\n    # veliki problem je ovde u vezi query-ja, zato sto datastore ne podrzava LIKE statement, verovatno cemo koristiti GAE Search\n    updated = ndb.DateTimeProperty('1', auto_now=True, required=True)\n    title = ndb.StringProperty('2', required=True, indexed=False)\n    category = ndb.IntegerProperty('3', required=True)# proveriti da li composite index moze raditi kada je ovo indexed=False\n    body = ndb.TextProperty('4', required=True)\n    sequence = ndb.IntegerProperty('5', required=True)# proveriti da li composite index moze raditi kada je ovo indexed=False\n    state = ndb.IntegerProperty('6', required=True)# published/unpublished - proveriti da li composite index moze raditi kada je ovo indexed=False\n\n\nclass Image(ndb.Model):\n    \n    # ancestor Any Object\n    image = blobstore.BlobKeyProperty('1', required=True, indexed=False)# blob ce se implementirati na GCS\n    content_type = ndb.StringProperty('2', required=True, indexed=False)\n    size = ndb.FloatProperty('3', required=True, indexed=False)\n    width = ndb.IntegerProperty('4', required=True, indexed=False)\n    height = ndb.IntegerProperty('5', required=True, indexed=False)\n    sequence = ndb.IntegerProperty('6', required=True)\n\n\nclass Country(ndb.Model):\n    \n    # root\n    # u slucaju da ostane index za code, trebace nam composit index code+name\n    # veliki problem je ovde u vezi query-ja, zato sto datastore ne podrzava LIKE statement, verovatno cemo koristiti GAE Search\n    code = ndb.StringProperty('1', required=True, indexed=False)\n    name = ndb.StringProperty('2', required=True, indexed=False)\n    state = ndb.IntegerProperty('3', required=True)# active/inactive - proveriti da li composite index moze raditi kada je ovo indexed=False\n\n\nclass CountrySubdivision(ndb.Model):\n    \n    # ancestor Country\n    # koliko cemo drilldown u ovoj strukturi zavisi od kasnijih odluka u vezi povezivanja lokativnih informacija sa informacijama ovog modela..\n    # u slucaju da ostane index za code, trebace nam composit index code+name\n    # veliki problem je ovde u vezi query-ja, zato sto datastore ne podrzava LIKE statement, verovatno cemo koristiti GAE Search\n    parent_record = ndb.KeyProperty('1', kind=CountrySubdivision, indexed=False)\n    name = ndb.StringProperty('2', required=True, indexed=False)\n    code = ndb.StringProperty('3', required=True, indexed=False)\n    type = ndb.IntegerProperty('4', required=True, indexed=False)\n    state = ndb.IntegerProperty('5', required=True)# active/inactive - proveriti da li composite index moze raditi kada je ovo indexed=False\n\n\nclass Location(ndb.Model):\n    \n    # ancestor Any Object (Store, StoreTax, StoreCarrierLine, Catalog...)\n    country = ndb.KeyProperty('1', kind=Country, required=True)\n    region = ndb.KeyProperty('2', kind=CountrySubdivision)\n    city = ndb.KeyProperty('3', kind=CountrySubdivision)# ne znam da li ce ovo postojati??\n    postal_code_from = ndb.StringProperty('4')\n    postal_code_to = ndb.StringProperty('5')\n\n\nclass ProductCategory(ndb.Model):\n    \n    # root\n    # http://hg.tryton.org/modules/product/file/tip/category.py#l8\n    # https://support.google.com/merchants/answer/1705911\n    # http://bazaar.launchpad.net/~openerp/openobject-addons/7.0/view/head:/product/product.py#L227\n    # veliki problem je ovde u vezi query-ja, zato sto datastore ne podrzava LIKE statement, verovatno cemo koristiti GAE Search\n    parent_record = ndb.KeyProperty('1', kind=ProductCategory, indexed=False)\n    name = ndb.StringProperty('2', required=True, indexed=False)\n    complete_name = ndb.TextProperty('3', required=True, indexed=False)\n    state = ndb.IntegerProperty('4', required=True)\n\n\nclass ProductUOMCategory(ndb.Model):\n    \n    # root\n    # http://hg.tryton.org/modules/product/file/tip/uom.py#l16\n    # http://bazaar.launchpad.net/~openerp/openobject-addons/7.0/view/head:/product/product.py#L81\n    # veliki problem je ovde u vezi query-ja, zato sto datastore ne podrzava LIKE statement, verovatno cemo koristiti GAE Search\n    name = ndb.StringProperty('1', required=True, indexed=False)\n\n\nclass ProductUOM(ndb.Model):\n    \n    # ancestor ProductUOMCategory\n    # http://hg.tryton.org/modules/product/file/tip/uom.py#l28\n    # http://hg.tryton.org/modules/product/file/tip/uom.xml#l63 - http://hg.tryton.org/modules/product/file/tip/uom.xml#l312\n    # http://bazaar.launchpad.net/~openerp/openobject-addons/7.0/view/head:/product/product.py#L89\n    # veliki problem je ovde u vezi query-ja, zato sto datastore ne podrzava LIKE statement, verovatno cemo koristiti GAE Search\n    name = ndb.StringProperty('1', required=True)\n    symbol = ndb.StringProperty('2', required=True, indexed=False)\n    rate = ndb.FloatProperty('3', required=True, indexed=False)# ovde ide custom decimal property\n    factor = ndb.FloatProperty('4', required=True, indexed=False)# ovde ide custom decimal property\n    rounding = ndb.FloatProperty('5', required=True, indexed=False)# ovde ide custom decimal property\n    digits = ndb.IntegerProperty('6', required=True, indexed=False)\n    state = ndb.IntegerProperty('7', required=True)\n\n\nclass User(ndb.Expando):\n    \n    # root\n    state = ndb.IntegerProperty('1', required=True)\n    #_default_indexed = False\n    #pass\n\n\nclass UserEmail(ndb.Model):\n    \n    # ancestor User\n    email = ndb.StringProperty('1', required=True)\n    primary = ndb.BooleanProperty('2', default=True, indexed=False)\n\n\nclass UserIdentity(ndb.Model):\n    \n    # ancestor User\n    user_email = ndb.KeyProperty('1', kind=UserEmail, required=True, indexed=False)\n    identity = ndb.StringProperty('2', required=True)# spojen je i provider name sa id-jem\n    associated = ndb.BooleanProperty('3', default=True, indexed=False)\n\n\nclass UserIPAddress(ndb.Model):\n    \n    # ancestor User\n    ip_address = ndb.StringProperty('1', required=True, indexed=False)\n    logged = ndb.DateTimeProperty('2', auto_now_add=True, required=True)\n\n\nclass UserRole(ndb.Model):\n    \n    # ancestor User\n    role = ndb.KeyProperty('1', kind=Role, required=True)\n    state = ndb.IntegerProperty('1', required=True)# invited/accepted\n\n\nclass AggregateUserPermission(ndb.Model):\n    \n    # ancestor User\n    reference = ndb.KeyProperty('1',required=True)# ? ovo je referenca na Role u slucaju da user nasledjuje globalne dozvole, tj da je Role entitet root\n    permissions = ndb.StringProperty('2', repeated=True, indexed=False)# permission_state_model - edit_unpublished_catalog\n\n\nclass Role(ndb.Model):\n    \n    # ancestor Store (Application, in the future) with permissions that affect store (application) and it's related entities\n    # or root (if it is root, key id is manually assigned string) with global permissions on mstyle\n    name = ndb.StringProperty('1', required=True, indexed=False)\n    permissions = ndb.StringProperty('2', repeated=True, indexed=False)# permission_state_model - edit_unpublished_catalog\n    readonly = ndb.BooleanProperty('3', default=True, indexed=False)\n\n\nclass Store(ndb.Expando):\n    \n    # root\n    name = ndb.StringProperty('1', required=True)\n    logo = blobstore.BlobKeyProperty('2', required=True)# verovatno je i dalje ovaj property od klase blobstore\n    state = ndb.IntegerProperty('3', required=True)\n    _default_indexed = False\n    pass\n\n\nclass StoreContent(ndb.Model):\n    \n    # ancestor Store, Catalog (kesiranje)\n    title = ndb.StringProperty('1', required=True)\n    body = ndb.TextProperty('2', required=True)\n    sequence = ndb.IntegerProperty('3', required=True)\n\n\nclass StoreTax(ndb.Expando):\n    \n    # ancestor Store\n    name = ndb.StringProperty('1', required=True)\n    sequence = ndb.IntegerProperty('2', required=True)\n    type = ndb.IntegerProperty('3', required=True)\n    amount = ndb.FloatProperty('4', required=True)# ovde ide custom decimal property - obratiti paznju oko decimala posto ovo moze da bude i currency i procenat.\n    location_exclusion = ndb.BooleanProperty('5', default=False)\n    active = ndb.BooleanProperty('6', default=True)\n    #product_category = ndb.KeyProperty('7', kind=ProductCategory)\n    #store_carrier = ndb.KeyProperty('8', kind=StoreCarrier)\n\n\nclass StoreCarrier(ndb.Model):\n    \n    # ancestor Store\n    name = ndb.StringProperty('1', required=True)\n    active = ndb.BooleanProperty('2', default=True)\n\n\nclass StoreCarrierLine(ndb.Model):\n    \n    # ancestor StoreCarrier\n    name = ndb.StringProperty('1', required=True)\n    sequence = ndb.IntegerProperty('2', required=True)\n    location_exclusion = ndb.BooleanProperty('3', default=False)\n    active = ndb.BooleanProperty('4', default=True)\n    pricelists = ndb.StructuredProperty(StoreCarrierPricelist, '5', repeated=True)\n\n# jos je upitno da li cemo ovo ovako zadrzati, to sve zavizi od querija i indexa...\nclass StoreCarrierPricelist(ndb.Model):\n    \n    # StructuredProperty model\n    condition_type = ndb.IntegerProperty('1', required=True)\n    condition_operator = ndb.IntegerProperty('2', required=True)\n    condition_value = ndb.FloatProperty('3', required=True)# ovde ide custom decimal property - verovatno da ce trebati i ovde product_uom_id kako bi prodavac mogao da ustima vrednost koju zeli... mozemo ici i na to da je uom fiksan ovde, a isto tako i fiksan u product measurements-ima...\n    price_type = ndb.IntegerProperty('4', required=True)\n    price_type_factor = ndb.IntegerProperty('5', required=True)\n    amount = ndb.FloatProperty('6', required=True)# ovde ide custom decimal property\n\n\nclass BuyerAddress(ndb.Model):\n    \n    # ancestor User\n    name = ndb.StringProperty('1', required=True)\n    country = ndb.KeyProperty('2', kind=Country, required=True, indexed=False)\n    region = ndb.KeyProperty('3', kind=CountrySubdivision, required=True, indexed=False)# ostaje da vidimo kako cemo ovo da handlamo, ili selection, ili text, ili i jedno i drugo po potrebi...\n    city = ndb.StringProperty('4', required=True, indexed=False)\n    postal_code = ndb.StringProperty('5', required=True, indexed=False)\n    street_address = ndb.StringProperty('6', required=True, indexed=False)\n    street_address2 = ndb.StringProperty('7', indexed=False)\n    email = ndb.StringProperty('8', indexed=False)\n    telephone = ndb.StringProperty('9', indexed=False)\n    default_shipping = ndb.BooleanProperty('10', default=True)# indexed=False ?\n    default_billing = ndb.BooleanProperty('11', default=True)# indexed=False ?\n\n# bice potrebna verovatno i aggregate tabela neka\nclass BuyerCollection(ndb.Model):\n    \n    # ancestor User\n    name = ndb.StringProperty('1', required=True)\n    notifications = ndb.BooleanProperty('2', default=False, indexed=False)\n    store = ndb.KeyProperty('3', kind=Store, repeated=True, indexed=False)\n    product_category = ndb.KeyProperty('4', kind=ProductCategory, repeated=True, indexed=False)\n\n\nclass Currency(ndb.Model):\n    \n    # root\n    # http://hg.tryton.org/modules/currency/file/tip/currency.py#l14\n    # http://hg.tryton.org/modules/currency/file/tip/currency.xml#l107\n    # http://bazaar.launchpad.net/~openerp/openobject-server/7.0/view/head:/openerp/addons/base/res/res_currency.py#L32\n    name = ndb.StringProperty('1', required=True)\n    symbol = ndb.StringProperty('2', required=True)\n    code = ndb.StringProperty('3', required=True)\n    numeric_code = ndb.StringProperty('4')\n    rounding = ndb.FloatProperty('5', required=True)# custom decimal\n    digits = ndb.IntegerProperty('6', required=True)\n    active = ndb.BooleanProperty('7', default=True)\n    #formating\n    grouping = ndb.StringProperty('8', required=True)\n    decimal_separator = ndb.StringProperty('9', required=True)\n    thousands_separator = ndb.StringProperty('10')\n    positive_sign_position = ndb.IntegerProperty('11', required=True)\n    negative_sign_position = ndb.IntegerProperty('12', required=True)\n    positive_sign = ndb.StringProperty('13')\n    negative_sign = ndb.StringProperty('14')\n    positive_currency_symbol_precedes = ndb.BooleanProperty('15', default=True)\n    negative_currency_symbol_precedes = ndb.BooleanProperty('16', default=True)\n    positive_separate_by_space = ndb.BooleanProperty('17', default=True)\n    negative_separate_by_space = ndb.BooleanProperty('18', default=True)\n\n\nclass Order(ndb.Expando):\n    \n    # root\n    reference = ndb.StringProperty('1', required=True)\n    order_date = ndb.DateTimeProperty('2', auto_now_add=True, required=True)\n    currency = ndb.KeyProperty('3', kind=Currency, required=True)\n    untaxed_amount = ndb.FloatProperty('4', required=True)# custom decimal\n    tax_amount = ndb.FloatProperty('5', required=True)# custom decimal\n    total_amount = ndb.FloatProperty('6', required=True)# custom decimal\n    comment = ndb.TextProperty('7')\n    state = ndb.IntegerProperty('8', required=True)\n    #Expando\n    company_address = ndb.StructuredProperty(OrderAddress, '9', required=True)\n    billing_address = ndb.StructuredProperty(OrderAddress, '10', required=True)\n    shipping_address = ndb.StructuredProperty(OrderAddress, '11', required=True)\n    _default_indexed = False\n    pass\n\n\nclass OrderReference(ndb.Model):\n    \n    # ancestor Order\n    company_address = ndb.KeyProperty('1', kind=BuyerAddress, required=True)\n    billing_address = ndb.KeyProperty('2', kind=BuyerAddress, required=True)\n    shipping_address = ndb.KeyProperty('3', kind=BuyerAddress, required=True)\n    carrier = ndb.KeyProperty('4', kind=StoreCarrier, required=True)\n\n\nclass OrderAddress(ndb.Expando):\n    \n    # StructuredProperty model\n    name = ndb.StringProperty('1', required=True)\n    country = ndb.StringProperty('2', required=True)\n    country_code = ndb.StringProperty('3', required=True)\n    region = ndb.StringProperty('4', required=True)\n    city = ndb.StringProperty('5', required=True)\n    postal_code = ndb.StringProperty('6', required=True)\n    street_address = ndb.StringProperty('7', required=True)\n    street_address2 = ndb.StringProperty('8')\n    email = ndb.StringProperty('9')\n    telephone = ndb.StringProperty('10')\n    type = ndb.IntegerProperty('11', required=True)# ?\n\n\nclass OrderLine(ndb.Expando):\n    \n    # ancestor Order\n    description = ndb.TextProperty('1', required=True)\n    quantity = ndb.FloatProperty('2', required=True)# custom decimal\n    product_uom = ndb.KeyProperty('3', kind=ProductUOM, required=True)\n    unit_price = ndb.FloatProperty('4', required=True)# custom decimal\n    discount = ndb.FloatProperty('5', default=0.00)# custom decimal\n    sequence = ndb.IntegerProperty('6', required=True)\n    taxes = ndb.StructuredProperty(OrderLineTax, '7', repeated=True)\n    _default_indexed = False\n    pass\n    #Expando\n    #product_category = ndb.KeyProperty('1', kind=ProductCategory, required=True)\n\n\nclass OrderLineReference(ndb.Model):\n    \n    # ancestor OrderLine\n    catalog_pricetag = ndb.KeyProperty('1', kind=CatalogPricetag, required=True)\n    product_instance = ndb.KeyProperty('2', kind=ProductInstance, required=True)\n    taxes = ndb.KeyProperty('3', kind=StoreTax, repeated=True)\n\n\nclass OrderLineTax(ndb.Model):\n    \n    # StructuredProperty model\n    # ovde vazi isto, ovo se moze izmeniti kada budemo optimize query/index..\n    # http://hg.tryton.org/modules/account/file/tip/tax.py#l545\n    name = ndb.StringProperty('1', required=True)\n    type = ndb.IntegerProperty('2', required=True)\n    amount = ndb.FloatProperty('3', required=True) # custom decimal - obratiti paznju oko decimala posto ovo moze da bude i currency i procenat.\n    #sequence = ndb.IntegerProperty('4', required=True)\n\n\nclass PayPalTransaction(ndb.Model):\n    \n    # ancestor Order\n    txn_id = ndb.StringProperty('1', required=True)\n    ipn_message = ndb.TextProperty('2', required=True)\n    logged = ndb.DateTimeProperty('3', auto_now_add=True, required=True)\n\n\nclass BillingLog(ndb.Model):\n    \n    # ancestor Billing Object (Store)\n    logged = ndb.DateTimeProperty('1', auto_now_add=True, required=True)\n    reference = ndb.KeyProperty('2',required=True)\n    amount = ndb.FloatProperty('3', required=True)# custom decimal\n    balance = ndb.FloatProperty('4', required=True)# custom decimal\n\n\nclass BillingCreditAdjustment(ndb.Model):\n    \n    # ancestor Billing Object (Store)\n    amount = ndb.FloatProperty('1', required=True)# custom decimal\n    state = ndb.IntegerProperty('2', required=True)\n\n\nclass OrderFeedback(ndb.Model):\n    \n    # ancestor Order\n    store = ndb.KeyProperty('1', kind=Store, required=True)\n    store_name = ndb.StringProperty('2', required=True)\n    buyer = ndb.KeyProperty('3', kind=User, required=True)\n    state = ndb.IntegerProperty('4', required=True)\n    \n    order_reference = ndb.StringProperty('5', required=True)# ? mozda async \n    order_date = ndb.DateTimeProperty('6', auto_now_add=True, required=True)#? mozda async\n    total_amount = ndb.FloatProperty('7', required=True)# custom decimal ? mozda async\n    order_state = ndb.IntegerProperty('8', required=True)# ? mozda async\n\n\nclass Catalog(ndb.Expando):\n    \n    # root\n    store = ndb.KeyProperty('1', kind=Store, required=True)\n    name = ndb.StringProperty('2', required=True)\n    publish = ndb.DateTimeProperty('3', required=True)# trebaju se definisati granice i rasponi, i postaviti neke default vrednosti\n    discontinue = ndb.DateTimeProperty('4', required=True)\n    cover = blobstore.BlobKeyProperty('5', required=True)# verovatno je i dalje ovaj property od klase blobstore\n    cost = ndb.FloatProperty('6', required=True)# custom decimal\n    state = ndb.IntegerProperty('7', required=True)\n    _default_indexed = False\n    pass\n\n\nclass CatalogContent(ndb.Model):\n    \n    # ancestor Catalog\n    title = ndb.StringProperty('1', required=True)\n    body = ndb.TextProperty('2', required=True)\n\n\nclass CatalogPricetag(ndb.Model):\n    \n    # ancestor Catalog\n    product_template = ndb.KeyProperty('1', kind=ProductTemplate, required=True)\n    container_image = blobstore.BlobKeyProperty('2', required=True)# verovatno je i dalje ovaj property od klase blobstore\n    source_width = ndb.FloatProperty('3', required=True)\n    source_height = ndb.FloatProperty('4', required=True)\n    source_position_top = ndb.FloatProperty('5', required=True)\n    source_position_left = ndb.FloatProperty('6', required=True)\n    value = ndb.StringProperty('7', required=True)\n\n\nclass ProductTemplate(ndb.Expando):\n    \n    # ancestor Catalog\n    product_category = ndb.KeyProperty('1', kind=ProductCategory, required=True)\n    name = ndb.StringProperty('2', required=True)\n    description = ndb.TextProperty('3', required=True)# limit na 10000 karaktera - We recommend that you submit around 500 to 1,000 characters, but you can submit up to 10,000 characters.\n    product_uom = ndb.KeyProperty('4', kind=ProductUOM, required=True)\n    unit_price = ndb.FloatProperty('5', required=True) # custom decimal property\n    active = ndb.BooleanProperty('6', default=True)#?\n    _default_indexed = False\n    pass\n    #Expando\n    #weight = ndb.FloatProperty('7')# custom decimal\n    #weight_uom = ndb.KeyProperty('8', kind=ProductUOM, required=True)# filtrirano po ProductUOMCategory Weight\n    #volume = ndb.FloatProperty('9')# custom decimal\n    #volume_uom = ndb.KeyProperty('10', kind=ProductUOM, required=True)# filtrirano po ProductUOMCategory Volume\n\n\nclass ProductInstance(ndb.Expando):\n    \n    # ancestor ProductTemplate\n    #variant_signature se gradi na osnovu ProductVariant entiteta vezanih za ProductTemplate-a (od aktuelne ProductInstance) preko ProductTemplateVariant \n    #key name ce se graditi tako sto se uradi MD5 na variant_signature\n    #query ce se graditi tako sto se prvo izgradi variant_signature vrednost na osnovu odabira od strane krajnjeg korisnika a potom se ta vrednost hesira u MD5 i koristi kao key identifier\n    #mana ove metode je ta sto se uvek mora izgraditi kompletan variant_signature, tj moraju se sve varijacije odabrati (svaka varianta mora biti mandatory_variant_type)\n    #default vrednost code ce se graditi na osnovu sledecih informacija: ancestorkey-n, gde je n incremental integer koji se dodeljuje instanci prilikom njenog kreiranja\n    #ukoliko user ne odabere multivariant opciju onda se za ProductTemplate generise samo jedna ProductInstance i njen key se gradi automatski.\n    code = ndb.StringProperty('1', required=True)\n    active = ndb.BooleanProperty('2', default=True)#?\n    _default_indexed = False\n    pass\n    #Expando\n    #description = ndb.TextProperty('3', required=True)\n    #unit_price = ndb.FloatProperty('4', required=True) # custom decimal property\n    #managed_stock = ndb.BooleanProperty('5', default=False)\n    #low_stock_notify = ndb.BooleanProperty('6', default=True)\n    #low_stock_quantity = ndb.FloatProperty('7', default=0.00)# custom decimal\n    #weight = ndb.FloatProperty('8')# custom decimal\n    #weight_uom = ndb.KeyProperty('9', kind=ProductUOM, required=True)# filtrirano po ProductUOMCategory Weight\n    #volume = ndb.FloatProperty('10')# custom decimal\n    #volume_uom = ndb.KeyProperty('11', kind=ProductUOM, required=True)# filtrirano po ProductUOMCategory Volume\n    #variant_signature = ndb.TextProperty('12', required=True)\n\n\nclass ProductInstanceInventory(ndb.Model):\n    \n    # ancestor ProductInstance\n    updated = ndb.DateTimeProperty('1', auto_now_add=True, required=True)\n    # ? reference = ndb.KeyProperty('2', required=True)\n    quantity = ndb.FloatProperty('3', required=True)# custom decimal\n    balance = ndb.FloatProperty('4', required=True)# custom decimal\n\n\nclass ProductContent(ndb.Model):\n    \n    # ancestor ProductTemplate, ProductInstance\n    catalog_content = ndb.KeyProperty('1', kind=CatalogContent, required=True)\n    sequence = ndb.IntegerProperty('2', required=True)\n\n\nclass ProductVariant(ndb.Model):\n    \n    #ancestor Catalog\n    name = ndb.StringProperty('1', required=True)\n    description = ndb.TextProperty('2')\n    options = ndb.StringProperty('3', repeated=True)# nema potrebe za seqence - The datastore preserves the order of the list items in a repeated property, so you can assign some meaning to their ordering.\n    allow_custom_value = ndb.BooleanProperty('4', default=False)#?\n    mandatory_variant_type = ndb.BooleanProperty('5', default=True)#?\n\n\nclass ProductTemplateVariant(ndb.Model):\n    \n    # ancestor ProductTemplate\n    product_variant = ndb.KeyProperty('1', kind=ProductVariant, required=True)\n    sequence = ndb.IntegerProperty('2', required=True)\n"]],"start1":0,"start2":0,"length1":0,"length2":26867}]],"length":26867}
{"contributors":[],"silentsave":true,"ts":1375383335125,"patch":[[{"diffs":[[0,"\n    # root\n"],[1,"    \n"],[0,"    # u sluc"]],"start1":5834,"start2":5834,"length1":24,"length2":29}]],"length":26872,"saved":false}
{"ts":1375383337562,"patch":[[{"diffs":[[0," # root\n    "],[1,"# "],[0,"\n    # u slu"]],"start1":5838,"start2":5838,"length1":24,"length2":26}]],"length":26874,"saved":false}
{"ts":1375383363292,"patch":[[{"diffs":[[0,"t\n    # "],[1,"http://hg.tryton.org/modules/country/file/tip/country.py#l8\n    "],[0,"\n    # u"]],"start1":5844,"start2":5844,"length1":16,"length2":80}]],"length":26938,"saved":false}
{"ts":1375383365440,"patch":[[{"diffs":[[0,"y.py#l8\n    "],[1,"# "],[0,"\n    # u slu"]],"start1":5904,"start2":5904,"length1":24,"length2":26}]],"length":26940,"saved":false}
{"ts":1375383374936,"patch":[[{"diffs":[[0,"8\n    # "],[1,"http://en.wikipedia.org/wiki/ISO_3166"],[0,"\n    # u"]],"start1":5910,"start2":5910,"length1":16,"length2":53}]],"length":26977,"saved":false}
{"ts":1375383416970,"patch":[[{"diffs":[[0,"SO_3166\n"],[1,"    # \n"],[0,"    # u "]],"start1":5948,"start2":5948,"length1":16,"length2":23}]],"length":26984,"saved":false}
{"ts":1375383417821,"patch":[[{"diffs":[[0,"6\n    # "],[1,"http://www.google.com/url?q=http%3A%2F%2Fhg.tryton.org%2Fmodules%2Fcountry%2Ffile%2Ftip%2Fcountry.xml&sa=D&sntz=1&usg=AFQjCNG-MB-7IPU8vD1HToqZY0nXsC6LoQ"],[0,"\n    # u"]],"start1":5954,"start2":5954,"length1":16,"length2":168}]],"length":27136,"saved":false}
{"ts":1375383432247,"patch":[[{"diffs":[[0,"2Ffi"],[-1,"le%2Ftip%2Fcountry.xml&sa=D&sntz=1&usg=AFQjCNG-MB-7IPU8vD1HToqZY0nXsC6LoQ"],[0,"\n   "]],"start1":6037,"start2":6037,"length1":81,"length2":8}]],"length":27063,"saved":false}
{"ts":1375383436391,"patch":[[{"diffs":[[0,"  # "],[-1,"http://www.google.com/url?q=http%3A%2F%2Fhg.tryton.org%2Fmodules%2Fcountry%2Ffi"],[0,"\n   "]],"start1":5958,"start2":5958,"length1":87,"length2":8}]],"length":26984,"saved":false}
{"ts":1375383448542,"patch":[[{"diffs":[[0,"SO_3166\n"],[1,"    # http://hg.tryton.org/modules/country/file/tip/country.xml\n"],[0,"    # \n "]],"start1":5948,"start2":5948,"length1":16,"length2":80}]],"length":27048,"saved":false}
{"ts":1375383455847,"patch":[[{"diffs":[[0,"l\n    # "],[1,"http://downloads.tryton.org/2.8/trytond_country-2.8.0.tar.gz"],[0,"\n    # u"]],"start1":6018,"start2":6018,"length1":16,"length2":76}]],"length":27108,"saved":false}
{"ts":1375383844649,"patch":[[{"diffs":[[0,".tar.gz\n"],[1,"    # http://bazaar.launchpad.net/~openerp/openobject-server/7.0/view/head:/openerp/addons/base/res/res_country.py#L42\n"],[0,"    # u "]],"start1":6079,"start2":6079,"length1":16,"length2":135}]],"length":27227,"saved":false}
{"ts":1375383857363,"patch":[[{"diffs":[[0,"Country\n"],[1,"    # http://bazaar.launchpad.net/~openerp/openobject-server/7.0/view/head:/openerp/addons/base/res/res_country.py#L86\n"],[0,"    # ko"]],"start1":6743,"start2":6743,"length1":16,"length2":135}]],"length":27346,"saved":false}
{"ts":1375383885832,"patch":[[{"diffs":[[0,"Country\n"],[1,"    \n"],[0,"    # ht"]],"start1":6743,"start2":6743,"length1":16,"length2":21}]],"length":27351,"saved":false}
{"ts":1375383890909,"patch":[[{"diffs":[[0,"Country\n    "],[1,"# "],[0,"\n    # http:"]],"start1":6743,"start2":6743,"length1":24,"length2":26}]],"length":27353,"saved":false}
{"ts":1375383897685,"patch":[[{"diffs":[[0,"y\n    # "],[1,"http://hg.tryton.org/modules/country/file/tip/country.py#l52"],[0,"\n    # h"]],"start1":6749,"start2":6749,"length1":16,"length2":76}]],"length":27413,"saved":false}
{"ts":1375384050583,"patch":[[{"diffs":[[0,"', required=True"],[1,", indexed=False"],[0,")\n    decimal_se"]],"start1":16600,"start2":16600,"length1":32,"length2":47}]],"length":27428,"saved":false}
{"ts":1375384052282,"patch":[[{"diffs":[[0,"equired=True"],[1,", indexed=False"],[0,")\n    thousa"]],"start1":16682,"start2":16682,"length1":24,"length2":39}]],"length":27443,"saved":false}
{"ts":1375384054284,"patch":[[{"diffs":[[0,"roperty('10'"],[1,", indexed=False"],[0,")\n    positi"]],"start1":16748,"start2":16748,"length1":24,"length2":39}]],"length":27458,"saved":false}
{"ts":1375384056751,"patch":[[{"diffs":[[0,"equired=True"],[1,", indexed=False"],[0,")\n    negati"]],"start1":16833,"start2":16833,"length1":24,"length2":39},{"diffs":[[0,"', required=True"],[1,", indexed=False"],[0,")\n    positive_s"]],"start1":16914,"start2":16914,"length1":32,"length2":47}]],"length":27488,"saved":false}
{"ts":1375384058289,"patch":[[{"diffs":[[0,"rty('13'"],[1,", indexed=False"],[0,")\n    ne"]],"start1":16982,"start2":16982,"length1":16,"length2":31}]],"length":27503,"saved":false}
{"ts":1375384059622,"patch":[[{"diffs":[[0,"rty('14'"],[1,", indexed=False"],[0,")\n    po"]],"start1":17042,"start2":17042,"length1":16,"length2":31}]],"length":27518,"saved":false}
{"ts":1375384060811,"patch":[[{"diffs":[[0,"5', default=True"],[1,", indexed=False"],[0,")\n    negative_c"]],"start1":17129,"start2":17129,"length1":32,"length2":47}]],"length":27533,"saved":false}
{"ts":1375384063838,"patch":[[{"diffs":[[0,"default=True"],[1,", indexed=False"],[0,")\n    positi"]],"start1":17228,"start2":17228,"length1":24,"length2":39}]],"length":27548,"saved":false}
{"ts":1375384066234,"patch":[[{"diffs":[[0,"default=True"],[1,", indexed=False"],[0,")\n    negati"]],"start1":17316,"start2":17316,"length1":24,"length2":39},{"diffs":[[0,"8', default=True"],[1,", indexed=False"],[0,")\n\n\nclass Order("]],"start1":17400,"start2":17400,"length1":32,"length2":47}]],"length":27578,"saved":false}
{"ts":1375384077134,"patch":[[{"diffs":[[0,"default=True"],[1,", indexed=False"],[0,")\n    #forma"]],"start1":16535,"start2":16535,"length1":24,"length2":39}]],"length":27593,"saved":false}
{"ts":1375384078930,"patch":[[{"diffs":[[0,"', required=True"],[1,", indexed=False"],[0,")\n    active = n"]],"start1":16479,"start2":16479,"length1":32,"length2":47}]],"length":27608,"saved":false}
{"ts":1375384080631,"patch":[[{"diffs":[[0,"', required=True"],[1,", indexed=False"],[0,")# custom decima"]],"start1":16410,"start2":16410,"length1":32,"length2":47}]],"length":27623,"saved":false}
{"ts":1375384083497,"patch":[[{"diffs":[[0,"Property('4'"],[1,", indexed=False"],[0,")\n    roundi"]],"start1":16361,"start2":16361,"length1":24,"length2":39}]],"length":27638,"saved":false}
{"ts":1375384088663,"patch":[[{"diffs":[[0,"dexed=False)"],[1,"# "],[0,"\n    #format"]],"start1":16596,"start2":16596,"length1":24,"length2":26}]],"length":27640,"saved":false}
{"ts":1375384092848,"patch":[[{"diffs":[[0,"ult=True"],[-1,", indexed=False"],[0,")# \n    "]],"start1":16584,"start2":16584,"length1":31,"length2":16}]],"length":27625,"saved":false}
{"ts":1375384097371,"patch":[[{"diffs":[[0,"=True)# "],[1,"? mozda "],[0,"\n    #fo"]],"start1":16587,"start2":16587,"length1":16,"length2":24}]],"length":27633,"saved":false}
{"ts":1375384098931,"patch":[[{"diffs":[[0,"? mozda "],[1,"bude s"],[0,"\n    #fo"]],"start1":16595,"start2":16595,"length1":16,"length2":22}]],"length":27639,"saved":false}
{"ts":1375384101191,"patch":[[{"diffs":[[0,"a bude s"],[1,"tate a mozd"],[0,"\n    #fo"]],"start1":16601,"start2":16601,"length1":16,"length2":27}]],"length":27650,"saved":false}
{"ts":1375384105321,"patch":[[{"diffs":[[0,"tate"],[-1," a mozd"],[0,"\n   "]],"start1":16609,"start2":16609,"length1":15,"length2":8}]],"length":27643,"saved":false}
{"ts":1375384191540,"patch":[[{"diffs":[[0,".py#l14\n"],[1,"    # \n"],[0,"    # ht"]],"start1":15981,"start2":15981,"length1":16,"length2":23}]],"length":27650,"saved":false}
{"ts":1375384246810,"patch":[[{"diffs":[[0,"4\n    # "],[1,"http://en.wikipedia.org/wiki/ISO_4217"],[0,"\n    # h"]],"start1":15987,"start2":15987,"length1":16,"length2":53}]],"length":27687,"saved":false}
{"ts":1375384442743,"patch":[[{"diffs":[[0,"', required=True"],[1,"http://en.wikipedia.org/wiki/ISO_4217"],[0,")\n    symbol = n"]],"start1":16256,"start2":16256,"length1":32,"length2":69}]],"length":27724,"saved":false}
{"ts":1375384455108,"patch":[[{"diffs":[[0,"True"],[-1,"http://en.wikipedia.org/wiki/ISO_4217"],[0,")\n  "]],"start1":16268,"start2":16268,"length1":45,"length2":8}]],"length":27687,"saved":false}
{"ts":1375384456604,"patch":[[{"diffs":[[0,"', required=True"],[1,", indexed=False"],[0,")\n    symbol = n"]],"start1":16256,"start2":16256,"length1":32,"length2":47}]],"length":27702,"saved":false}
{"ts":1375384460971,"patch":[[{"diffs":[[0,"', required=True"],[1,", indexed=False"],[0,")\n    code = ndb"]],"start1":16323,"start2":16323,"length1":32,"length2":47}]],"length":27717,"saved":false}
{"ts":1375384478820,"patch":[[{"diffs":[[0,", required=True)"],[1,"# ? mozda bude state"],[0,"\n\n\nclass User(nd"]],"start1":10210,"start2":10210,"length1":32,"length2":52}]],"length":27737,"saved":false}
{"contributors":[],"silentsave":true,"ts":1375692286124,"patch":[[{"diffs":[[0," index code+name"],[-1,""],[1,"+active"],[0,"\n    # veliki pr"]],"start1":6267,"start2":6267,"length1":32,"length2":39},{"diffs":[[0,"se)\n    "],[-1,"stat"],[1,"activ"],[0,"e = ndb."],[-1,"Integer"],[1,"Boolean"],[0,"Property"]],"start1":6546,"start2":6546,"length1":35,"length2":36},{"diffs":[[0,"3', "],[-1,"required=True)# active/inactive -"],[1,"default=True, indexed=False)#"],[0," pro"]],"start1":6584,"start2":6584,"length1":41,"length2":37},{"diffs":[[0,"ode+name"],[-1,""],[1,"+active"],[0,"\n    # v"]],"start1":7154,"start2":7154,"length1":16,"length2":23},{"diffs":[[0,"se)\n    "],[-1,"stat"],[1,"activ"],[0,"e = ndb."],[-1,"Integer"],[1,"Boolean"],[0,"Property"]],"start1":7572,"start2":7572,"length1":35,"length2":36},{"diffs":[[0,"5', "],[-1,"required=True)# active/inactive -"],[1,"default=True, indexed=False)#"],[0," pro"]],"start1":7610,"start2":7610,"length1":41,"length2":37},{"diffs":[[0,"titi GAE Search\n"],[1,"    # custom index name+active\n"],[0,"    name = ndb.S"]],"start1":9682,"start2":9682,"length1":32,"length2":63},{"diffs":[[0,"se)\n    "],[-1,"stat"],[1,"activ"],[0,"e = ndb."],[-1,"Integer"],[1,"Boolean"],[0,"Property"]],"start1":10210,"start2":10210,"length1":35,"length2":36},{"diffs":[[0,"7', "],[-1,"required=True)# ? mozda bude stat"],[1,"default=True, indexed=False)# proveriti da li composite index moze raditi kada je ovo indexed=Fals"],[0,"e\n\n\n"]],"start1":10248,"start2":10248,"length1":41,"length2":106},{"diffs":[[0,"e)# "],[-1,"verovatno je i dalje ovaj property od klase blobstore"],[1,"blob ce se implementirati na GCS"],[0,"\n   "]],"start1":12355,"start2":12355,"length1":61,"length2":40},{"diffs":[[0,"# ancestor User\n"],[1,"    # composite index store+notifications\n"],[0,"    name = ndb.S"]],"start1":15667,"start2":15667,"length1":32,"length2":74},{"diffs":[[0,"    "],[-1,"notifications = ndb.Boolean"],[1,"store = ndb.Key"],[0,"Prop"]],"start1":15775,"start2":15775,"length1":35,"length2":23},{"diffs":[[0,"ty('"],[-1,"2', default=False, indexed=False)\n    store = ndb.Key"],[1,"1', kind=Store, required=True, indexed=False)\n    notifications = ndb.Boolean"],[0,"Prop"]],"start1":15800,"start2":15800,"length1":61,"length2":85},{"diffs":[[0,"ty('"],[-1,"3', kind=Store, repeated=Tru"],[1,"2', default=Fals"],[0,"e, i"]],"start1":15887,"start2":15887,"length1":36,"length2":24},{"diffs":[[0,"  pr"],[-1,"oduct_category"],[1,"imary_email"],[0," = ndb."],[-1,"Key"],[1,"String"],[0,"Prop"]],"start1":15927,"start2":15927,"length1":32,"length2":32},{"diffs":[[0,"ty('"],[-1,"4', kind=ProductCategory, repeat"],[1,"3', requir"],[0,"ed=T"]],"start1":15961,"start2":15961,"length1":40,"length2":18},{"diffs":[[0,".py#L32\n"],[1,"    # custom index code+active\n    # veliki problem je ovde u vezi query-ja, zato sto datastore ne podrzava LIKE statement, verovatno cemo koristiti GAE Search\n"],[0,"    name"]],"start1":16340,"start2":16340,"length1":16,"length2":176},{"diffs":[[0,"True"],[-1,")# ? mozda bude stat"],[1,", indexed=False)# proveriti da li composite index moze raditi kada je ovo indexed=Fals"],[0,"e\n  "]],"start1":16946,"start2":16946,"length1":28,"length2":94}]],"length":28067,"saved":false}
{"ts":1375692289427,"patch":[[{"diffs":[[0,"db.KeyProperty('"],[-1,"1"],[1,"2"],[0,"', kind=Store, r"]],"start1":15788,"start2":15788,"length1":33,"length2":33}]],"length":28067,"saved":false}
{"ts":1375692298855,"patch":[[{"diffs":[[0,"nd=Store, re"],[-1,"quir"],[1,"peat"],[0,"ed=True, ind"]],"start1":15810,"start2":15810,"length1":28,"length2":28}]],"length":28067,"saved":false}
{"ts":1375692305769,"patch":[[{"diffs":[[0,"ooleanProperty('"],[-1,"2"],[1,"3"],[0,"', default=False"]],"start1":15875,"start2":15875,"length1":33,"length2":33}]],"length":28067,"saved":false}
{"ts":1375692307534,"patch":[[{"diffs":[[0,"StringProperty('"],[-1,"3"],[1,"4"],[0,"', required=True"]],"start1":15949,"start2":15949,"length1":33,"length2":33}]],"length":28067,"saved":false}
{"ts":1375692319915,"patch":[[{"diffs":[[0,"tringProperty('4"],[1,"git "],[0,"', required=True"]],"start1":15950,"start2":15950,"length1":32,"length2":36}]],"length":28071,"saved":false}
{"ts":1375692322649,"patch":[[{"diffs":[[0,"y('4"],[-1,"git "],[0,"', r"]],"start1":15962,"start2":15962,"length1":12,"length2":8}]],"length":28067,"saved":false}
{"contributors":[],"silentsave":true,"ts":1375700538171,"patch":[[{"diffs":[[0,"ed=False)\n\n\n"],[1,"\n\n"],[0,"class Curren"]],"start1":15989,"start2":15989,"length1":24,"length2":26}]],"length":28069,"saved":false}
{"ts":1375700543610,"patch":[[{"diffs":[[0,"alse)\n\n\n"],[1,"# bice potrebna verovatno i aggregate tabela neka\nclass BuyerCollection(ndb.Model):\n    \n    # ancestor User\n    # composite index store+notifications\n    name = ndb.StringProperty('1', required=True)\n    store = ndb.KeyProperty('2', kind=Store, repeated=True, indexed=False)\n    notifications = ndb.BooleanProperty('3', default=False, indexed=False)\n    primary_email = ndb.StringProperty('4', required=True, indexed=False)"],[0,"\n\nclass "]],"start1":15993,"start2":15993,"length1":16,"length2":440}]],"length":28493,"saved":false}
{"ts":1375700552758,"patch":[[{"diffs":[[0,", kind=Store, re"],[-1,"peat"],[1,"quir"],[0,"ed=True, indexed"]],"start1":16233,"start2":16233,"length1":36,"length2":36}]],"length":28493,"saved":false}
{"ts":1375700561335,"patch":[[{"diffs":[[0,"ons\n"],[-1,"    name = ndb.StringProperty('1', required=True)\n"],[0,"    "]],"start1":16148,"start2":16148,"length1":58,"length2":8}]],"length":28443,"saved":false}
{"ts":1375700574276,"patch":[[{"diffs":[[0,"ser\n"],[-1,"    # composite index store+notifications\n"],[0,"    "]],"start1":16106,"start2":16106,"length1":50,"length2":8}]],"length":28401,"saved":false}
{"ts":1375700579776,"patch":[[{"diffs":[[0,"db.KeyProperty('"],[-1,"2"],[1,"1"],[0,"', kind=Store, r"]],"start1":16123,"start2":16123,"length1":33,"length2":33}]],"length":28401,"saved":false}
{"ts":1375700583193,"patch":[[{"diffs":[[0,"se)\n"],[-1,"    notifications = ndb.BooleanProperty('3', default=False, indexed=False)"],[0,"\n   "]],"start1":16181,"start2":16181,"length1":82,"length2":8}]],"length":28327,"saved":false}
{"ts":1375700587135,"patch":[[{"diffs":[[0,"e)\n\n"],[-1,"    primary_email = ndb.StringProperty('4', required=True, indexed=False)\n\n"],[0,"clas"]],"start1":16182,"start2":16182,"length1":83,"length2":8}]],"length":28252,"saved":false}
{"ts":1375700588133,"patch":[[{"diffs":[[0,"d=False)"],[1,"\n    "],[0,"\n\nclass "]],"start1":16176,"start2":16176,"length1":16,"length2":21}]],"length":28257,"saved":false}
{"ts":1375700589156,"patch":[[{"diffs":[[0,"se)\n    "],[1,"store = ndb.KeyProperty('2', kind=Store, repeated=True, indexed=False)"],[0,"\n\nclass "]],"start1":16181,"start2":16181,"length1":16,"length2":86}]],"length":28327,"saved":false}
{"ts":1375700596340,"patch":[[{"diffs":[[0,"perty('2', kind="],[-1,"Store"],[1,"BuyerCollection"],[0,", repeated=True,"]],"start1":16207,"start2":16207,"length1":37,"length2":47}]],"length":28337,"saved":false}
{"ts":1375700599833,"patch":[[{"diffs":[[0,"=False)\n    "],[-1,"store"],[1,"collections"],[0," = ndb.KeyPr"]],"start1":16177,"start2":16177,"length1":29,"length2":35}]],"length":28343,"saved":false}
{"ts":1375700611542,"patch":[[{"diffs":[[0,"d=True)\n    "],[1,"#"],[0,"store = ndb."]],"start1":15767,"start2":15767,"length1":24,"length2":25}]],"length":28344,"saved":false}
{"ts":1375700619928,"patch":[[{"diffs":[[0," BuyerCollection"],[1,"Store"],[0,"(ndb.Model):\n   "]],"start1":16057,"start2":16057,"length1":32,"length2":37}]],"length":28349,"saved":false}
{"ts":1375701138031,"patch":[[{"diffs":[[0,"exed=False)\n"],[1,"    \n"],[0,"    collecti"]],"start1":16179,"start2":16179,"length1":24,"length2":29}]],"length":28354,"saved":false}
{"ts":1375701141016,"patch":[[{"diffs":[[0,"=False)\n    "],[1,"store_tim"],[0,"\n    collect"]],"start1":16183,"start2":16183,"length1":24,"length2":33}]],"length":28363,"saved":false}
{"ts":1375701143223,"patch":[[{"diffs":[[0,"tore_tim"],[1,"estamp"],[0,"\n    col"]],"start1":16196,"start2":16196,"length1":16,"length2":22}]],"length":28369,"saved":false}
{"ts":1375701144189,"patch":[[{"diffs":[[0,"imestamp"],[1," = "],[0,"\n    col"]],"start1":16202,"start2":16202,"length1":16,"length2":19}]],"length":28372,"saved":false}
{"ts":1375701178094,"patch":[[{"diffs":[[0,"stamp = "],[1,"ndb.DateTimeProperty('2', auto_now_add=True, required=True)"],[0,"\n    col"]],"start1":16205,"start2":16205,"length1":16,"length2":75}]],"length":28431,"saved":false}
{"ts":1375701182859,"patch":[[{"diffs":[[0,"db.KeyProperty('"],[-1,"2"],[1,"3"],[0,"', kind=BuyerCol"]],"start1":16292,"start2":16292,"length1":33,"length2":33}]],"length":28431,"saved":false}
{"ts":1375701202743,"patch":[[{"diffs":[[0,"rty('2',"],[-1," auto_now_add=True,"],[0," require"]],"start1":16230,"start2":16230,"length1":35,"length2":16}]],"length":28412,"saved":false}
{"ts":1375701270979,"patch":[[{"diffs":[[0,"False)\n\n"],[1,"\n\n"],[0,"class Cu"]],"start1":16338,"start2":16338,"length1":16,"length2":18}]],"length":28414,"saved":false}
{"ts":1375701455047,"patch":[[{"diffs":[[0,")\n\n\n"],[-1,"# bice potrebna verovatno i aggregate tabela neka\n"],[0,"clas"]],"start1":15998,"start2":15998,"length1":58,"length2":8}]],"length":28364,"saved":false}
{"ts":1375701462293,"patch":[[{"diffs":[[0,"lse)\n\n\n\n"],[1,"\n"],[0,"class Cu"]],"start1":16290,"start2":16290,"length1":16,"length2":17}]],"length":28365,"saved":false}
{"ts":1375701463862,"patch":[[{"diffs":[[0,"alse)\n\n\n"],[1,"class BuyerCollectionStore(ndb.Model):\n    \n    # ancestor User\n    store = ndb.KeyProperty('1', kind=Store, required=True, indexed=False)\n    store_timestamp = ndb.DateTimeProperty('2', required=True)\n    collections = ndb.KeyProperty('3', kind=BuyerCollection, repeated=True, indexed=False)\n"],[0,"\n\nclass "]],"start1":16289,"start2":16289,"length1":16,"length2":309}]],"length":28658,"saved":false}
{"ts":1375701468536,"patch":[[{"diffs":[[0," BuyerCollection"],[-1,"Store"],[1,"Ca"],[0,"(ndb.Model):\n   "]],"start1":16302,"start2":16302,"length1":37,"length2":34}]],"length":28655,"saved":false}
{"ts":1375701471404,"patch":[[{"diffs":[[0,"lectionC"],[-1,"a"],[0,"(ndb.Mod"]],"start1":16311,"start2":16311,"length1":17,"length2":16}]],"length":28654,"saved":false}
{"ts":1375701472656,"patch":[[{"diffs":[[0,"lectionC"],[1,"a"],[0,"(ndb.Mod"]],"start1":16311,"start2":16311,"length1":16,"length2":17}]],"length":28655,"saved":false}
{"ts":1375701473806,"patch":[[{"diffs":[[0,"ectionCa"],[1,"talog"],[0,"(ndb.Mod"]],"start1":16312,"start2":16312,"length1":16,"length2":21}]],"length":28660,"saved":false}
{"ts":1375701488775,"patch":[[{"diffs":[[0,"tore"],[-1,"_timestamp = ndb.DateTime"],[1," = ndb.Key"],[0,"Prop"]],"start1":16443,"start2":16443,"length1":33,"length2":18},{"diffs":[[0,"operty('"],[-1,"2', required=Tru"],[1,"1', kind=Store, required=True, indexed=Fals"],[0,"e)\n    c"]],"start1":16459,"start2":16459,"length1":32,"length2":59}]],"length":28672,"saved":false}
{"ts":1375701491848,"patch":[[{"diffs":[[0,"=False)\n    "],[-1,"store"],[1,"catalog"],[0," = ndb.KeyPr"]],"start1":16430,"start2":16430,"length1":29,"length2":31}]],"length":28674,"saved":false}
{"ts":1375701506645,"patch":[[{"diffs":[[0,"exed=False)\n"],[1,"    store_timestamp = ndb.DateTimeProperty('2', required=True)\n"],[0,"    collecti"]],"start1":16503,"start2":16503,"length1":24,"length2":87}]],"length":28737,"saved":false}
{"ts":1375701512313,"patch":[[{"diffs":[[0,"ue)\n"],[-1,"    collections = ndb.KeyProperty('3', kind=BuyerCollection, repeated=True, indexed=False)"],[0,"\n\n\nc"]],"start1":16574,"start2":16574,"length1":98,"length2":8}]],"length":28647,"saved":false}
{"ts":1375701513449,"patch":[[{"diffs":[[0,"True)\n\n\n"],[-1,"\n"],[0,"class Cu"]],"start1":16572,"start2":16572,"length1":17,"length2":16}]],"length":28646,"saved":false}
{"ts":1375701524078,"patch":[[{"diffs":[[0," required=True)\n"],[1,"    collections = ndb.KeyProperty('3', kind=BuyerCollection, repeated=True, indexed=False)\n"],[0,"\n\nclass Currency"]],"start1":16562,"start2":16562,"length1":32,"length2":123}]],"length":28737,"saved":false}
{"ts":1375701531013,"patch":[[{"diffs":[[0,"=False)\n    "],[-1,"store_timestamp"],[1,"catalog"],[0," = ndb.DateT"]],"start1":16507,"start2":16507,"length1":39,"length2":31}]],"length":28729,"saved":false}
{"ts":1375701535067,"patch":[[{"diffs":[[0,"\n    catalog"],[1,"_published_date"],[0," = ndb.DateT"]],"start1":16514,"start2":16514,"length1":24,"length2":39}]],"length":28744,"saved":false}
{"ts":1375701538239,"patch":[[{"diffs":[[0,"db.KeyProperty('"],[-1,"1"],[1,"2"],[0,"', kind=Store, r"]],"start1":16453,"start2":16453,"length1":33,"length2":33}]],"length":28744,"saved":false}
{"ts":1375701541572,"patch":[[{"diffs":[[0,"teTimeProperty('"],[-1,"2"],[1,"3"],[0,"', required=True"]],"start1":16550,"start2":16550,"length1":33,"length2":33}]],"length":28744,"saved":false}
{"ts":1375701544943,"patch":[[{"diffs":[[0,"db.KeyProperty('"],[-1,"3"],[1,"4"],[0,"', kind=BuyerCol"]],"start1":16604,"start2":16604,"length1":33,"length2":33}]],"length":28744,"saved":false}
{"ts":1375701567640,"patch":[[{"diffs":[[0,"=False)\n\n\nclass "],[1,"Aggregate"],[0,"BuyerCollectionC"]],"start1":16287,"start2":16287,"length1":32,"length2":41}]],"length":28753,"saved":false}
{"ts":1375702452762,"patch":[[{"diffs":[[0," indexed=False)\n"],[1,"    cover = blobstore.BlobKeyProperty('5', required=True)# verovatno je i dalje ovaj property od klase blobstore\n"],[0,"    catalog_publ"]],"start1":16508,"start2":16508,"length1":32,"length2":145}]],"length":28866,"saved":false}
{"ts":1375702490330,"patch":[[{"diffs":[[0,"=False)\n    "],[1,"catalo_"],[0,"cover = blob"]],"start1":16516,"start2":16516,"length1":24,"length2":31}]],"length":28873,"saved":false}
{"ts":1375702495815,"patch":[[{"diffs":[[0,"perty('2', kind="],[-1,"Store"],[1,"Catalog"],[0,", required=True,"]],"start1":16471,"start2":16471,"length1":37,"length2":39}]],"length":28875,"saved":false}
{"ts":1375702509224,"patch":[[{"diffs":[[0,"lobKeyProperty('"],[-1,"5"],[1,"3"],[0,"', required=True"]],"start1":16556,"start2":16556,"length1":33,"length2":33}]],"length":28875,"saved":false}
{"ts":1375702513120,"patch":[[{"diffs":[[0,"teTimeProperty('"],[-1,"3"],[1,"4"],[0,"', required=True"]],"start1":16681,"start2":16681,"length1":33,"length2":33}]],"length":28875,"saved":false}
{"ts":1375702516475,"patch":[[{"diffs":[[0,"db.KeyProperty('"],[-1,"4"],[1,"5"],[0,"', kind=BuyerCol"]],"start1":16735,"start2":16735,"length1":33,"length2":33}]],"length":28875,"saved":false}
{"ts":1375702521141,"patch":[[{"diffs":[[0,"    "],[-1,"collections = ndb.KeyProperty('5', kind=BuyerCollection, repeated=True, indexed=False)"],[0,"\n\n\nc"]],"start1":16716,"start2":16716,"length1":94,"length2":8}]],"length":28789,"saved":false}
{"ts":1375702525937,"patch":[[{"diffs":[[0,"ue)\n    "],[1,"collections = ndb.KeyProperty('5', kind=BuyerCollection, repeated=True, indexed=False)"],[0,"\n\n\nclass"]],"start1":16712,"start2":16712,"length1":16,"length2":102}]],"length":28875,"saved":false}
{"ts":1375702580709,"patch":[[{"diffs":[[0,"  catalo"],[1,"g"],[0,"_cover ="]],"start1":16528,"start2":16528,"length1":16,"length2":17}]],"length":28876,"saved":false}
{"ts":1375702598623,"patch":[[{"diffs":[[0,"e)# "],[-1,"verovatno je i dalje ovaj property od klase blobstore"],[1,"blob ce se implementirati na GCS"],[0,"\n   "]],"start1":16589,"start2":16589,"length1":61,"length2":40}]],"length":28855,"saved":false}
{"ts":1375703437294,"patch":[[{"diffs":[[0,"se)\n"],[-1,"    primary_email = ndb.StringProperty('4', required=True, indexed=False)"],[0,"\n\n\nc"]],"start1":15922,"start2":15922,"length1":81,"length2":8}]],"length":28782,"saved":false}
{"ts":1375703438452,"patch":[[{"diffs":[[0,"alse)\n\n\n"],[-1,"\n"],[0,"class Bu"]],"start1":15920,"start2":15920,"length1":17,"length2":16}]],"length":28781,"saved":false}
{"ts":1375703448338,"patch":[[{"diffs":[[0," indexed=False)\n"],[1,"    primary_email = ndb.StringProperty('4', required=True, indexed=False)\n"],[0,"\n\nclass Aggregat"]],"start1":16205,"start2":16205,"length1":32,"length2":106}]],"length":28855,"saved":false}
{"ts":1375703464623,"patch":[[{"diffs":[[0,"exed=False)\n"],[1,"    notifications = ndb.BooleanProperty('3', default=False, indexed=False)\n"],[0,"    primary_"]],"start1":16209,"start2":16209,"length1":24,"length2":99}]],"length":28930,"saved":false}
{"ts":1375703476444,"patch":[[{"diffs":[[0,"se)\n"],[-1,"    notifications = ndb.BooleanProperty('3', default=False, indexed=False)\n"],[0,"    "]],"start1":16217,"start2":16217,"length1":83,"length2":8}]],"length":28855,"saved":false}
{"ts":1375703482510,"patch":[[{"diffs":[[0,"roperty('4',"],[-1," required=True,"],[0," indexed=Fal"]],"start1":16252,"start2":16252,"length1":39,"length2":24}]],"length":28840,"saved":false}
{"ts":1375704093030,"patch":[[{"diffs":[[0,"    "],[-1,"primary_email = ndb.StringProperty('4', indexed=False)"],[0,"\n\n\nc"]],"start1":16221,"start2":16221,"length1":62,"length2":8}]],"length":28786,"saved":false}
{"ts":1375704094697,"patch":[[{"diffs":[[0," indexed=False)\n"],[1,"    primary_email = ndb.StringProperty('4', indexed=False)\n"],[0,"\n\nclass BuyerCol"]],"start1":15910,"start2":15910,"length1":32,"length2":91}]],"length":28845,"saved":false}
{"ts":1375704101883,"patch":[[{"diffs":[[0,")\n    \n\n"],[-1,"\n"],[0,"class Ag"]],"start1":16278,"start2":16278,"length1":17,"length2":16}]],"length":28844,"saved":false}
{"ts":1375704110582,"patch":[[{"diffs":[[0,"ingProperty('4',"],[1," required=True,"],[0," indexed=False)\n"]],"start1":15953,"start2":15953,"length1":32,"length2":47}]],"length":28859,"saved":false}
{"ts":1375704824463,"patch":[[{"diffs":[[0," ?\n\n"],[-1,"# bice potrebna verovatno i aggregate tabela neka"],[0,"\ncla"]],"start1":15570,"start2":15570,"length1":57,"length2":8}]],"length":28810,"saved":false}
{"ts":1375704828541,"patch":[[{"diffs":[[0,"ue)\n"],[-1,"    #store = ndb.KeyProperty('2', kind=Store, repeated=True, indexed=False)\n"],[0,"    "]],"start1":15722,"start2":15722,"length1":84,"length2":8}]],"length":28734,"saved":false}
{"ts":1375704873386,"patch":[[{"diffs":[[0,"lt=False"],[-1,", indexed=False"],[0,")\n    pr"]],"start1":15776,"start2":15776,"length1":31,"length2":16}]],"length":28719,"saved":false}
{"ts":1375704904388,"patch":[[{"diffs":[[0,"ser\n"],[-1,"    # composite index store+notifications\n"],[0,"    "]],"start1":15630,"start2":15630,"length1":50,"length2":8}]],"length":28677,"saved":false}
{"ts":1375704915056,"patch":[[{"diffs":[[0,"equired=True"],[-1,", indexed=False"],[0,")\n    store_"]],"start1":15930,"start2":15930,"length1":39,"length2":24}]],"length":28662,"saved":false}
{"ts":1375704928757,"patch":[[{"diffs":[[0,"    "],[-1,"store_timestamp = ndb.DateTime"],[1,"notifications = ndb.Boolean"],[0,"Prop"]],"start1":15944,"start2":15944,"length1":38,"length2":35},{"diffs":[[0,"operty('"],[-1,"2', required=Tru"],[1,"3', default=Fals"],[0,"e)\n    c"]],"start1":15977,"start2":15977,"length1":32,"length2":32}]],"length":28659,"saved":false}
{"ts":1375704932179,"patch":[[{"diffs":[[0,"d=True)\n    "],[-1,"notifications"],[1,"updated"],[0," = ndb.Boole"]],"start1":15936,"start2":15936,"length1":37,"length2":31}]],"length":28653,"saved":false}
{"ts":1375704938420,"patch":[[{"diffs":[[0,"ooleanProperty('"],[-1,"3"],[1,"2"],[0,"', default=False"]],"start1":15963,"start2":15963,"length1":33,"length2":33}]],"length":28653,"saved":false}
{"ts":1375705029904,"patch":[[{"diffs":[[0,"equired=True"],[-1,", indexed=False"],[0,")\n    catalo"]],"start1":16216,"start2":16216,"length1":39,"length2":24}]],"length":28638,"saved":false}
{"ts":1375705049747,"patch":[[{"diffs":[[0,"', required=True"],[1,", indexed=False"],[0,")# blob ce se im"]],"start1":16357,"start2":16357,"length1":32,"length2":47}]],"length":28653,"saved":false}
{"ts":1375706273175,"patch":[[{"diffs":[[0,"ue)\n"],[-1,"    updated = ndb.BooleanProperty('2', default=False)\n"],[0,"    "]],"start1":15940,"start2":15940,"length1":62,"length2":8}]],"length":28599,"saved":false}
{"ts":1375706274293,"patch":[[{"diffs":[[0,"db.KeyProperty('"],[-1,"3"],[0,"', kind=BuyerCol"]],"start1":15963,"start2":15963,"length1":33,"length2":32}]],"length":28598,"saved":false}
{"ts":1375706275823,"patch":[[{"diffs":[[0,"operty('"],[1,"2"],[0,"', kind="]],"start1":15971,"start2":15971,"length1":16,"length2":17}]],"length":28599,"saved":false}
{"ts":1375706280750,"patch":[[{"diffs":[[0,"# ancestor User\n"],[1,"    # task\n"],[0,"    store = ndb."]],"start1":16100,"start2":16100,"length1":32,"length2":43}]],"length":28610,"saved":false}
{"ts":1375706282181,"patch":[[{"diffs":[[0,"  # task"],[1," "],[0,"\n    sto"]],"start1":16118,"start2":16118,"length1":16,"length2":17}]],"length":28611,"saved":false}
{"ts":1375706283498,"patch":[[{"diffs":[[0," # task "],[1,"que"],[0,"\n    sto"]],"start1":16119,"start2":16119,"length1":16,"length2":19}]],"length":28614,"saved":false}
{"ts":1375706284804,"patch":[[{"diffs":[[0,"task que"],[1,"ue"],[0,"\n    sto"]],"start1":16122,"start2":16122,"length1":16,"length2":18}]],"length":28616,"saved":false}
{"ts":1375706285887,"patch":[[{"diffs":[[0,"sk queue"],[1," "],[0,"\n    sto"]],"start1":16124,"start2":16124,"length1":16,"length2":17}]],"length":28617,"saved":false}
{"ts":1375706290938,"patch":[[{"diffs":[[0,"k queue "],[1,"radi agregaciju"],[0,"\n    sto"]],"start1":16125,"start2":16125,"length1":16,"length2":31}]],"length":28632,"saved":false}
{"ts":1375706295337,"patch":[[{"diffs":[[0,"regaciju"],[1," prilikom izmene "],[0,"\n    sto"]],"start1":16140,"start2":16140,"length1":16,"length2":33}]],"length":28649,"saved":false}
{"ts":1375706297967,"patch":[[{"diffs":[[0,"kom "],[-1,"izmene "],[1,"nekih"],[0,"\n   "]],"start1":16154,"start2":16154,"length1":15,"length2":13}]],"length":28647,"saved":false}
{"ts":1375706301916,"patch":[[{"diffs":[[0,"om nekih"],[1," promena na store-u"],[0,"\n    sto"]],"start1":16155,"start2":16155,"length1":16,"length2":35}]],"length":28666,"saved":false}
{"ts":1375706376563,"patch":[[{"diffs":[[0,"    "],[-1,"collections = ndb.KeyProperty('5', kind=BuyerCollection, repeated=True, indexed=False)"],[0,"\n\n\nc"]],"start1":16507,"start2":16507,"length1":94,"length2":8}]],"length":28580,"saved":false}
{"ts":1375706378518,"patch":[[{"diffs":[[0,"uired=True)\n"],[1,"    collections = ndb.KeyProperty('5', kind=BuyerCollection, repeated=True, indexed=False)\n"],[0,"    catalog "]],"start1":16231,"start2":16231,"length1":24,"length2":115}]],"length":28671,"saved":false}
{"ts":1375706383400,"patch":[[{"diffs":[[0,"operty('"],[-1,"5"],[1,"2"],[0,"', kind="]],"start1":16270,"start2":16270,"length1":17,"length2":17}]],"length":28671,"saved":false}
{"ts":1375706385934,"patch":[[{"diffs":[[0,"db.KeyProperty('"],[-1,"2"],[1,"3"],[0,"', kind=Catalog,"]],"start1":16349,"start2":16349,"length1":33,"length2":33}]],"length":28671,"saved":false}
{"ts":1375706388427,"patch":[[{"diffs":[[0,"lobKeyProperty('"],[-1,"3"],[1,"4"],[0,"', required=True"]],"start1":16444,"start2":16444,"length1":33,"length2":33}]],"length":28671,"saved":false}
{"ts":1375706390483,"patch":[[{"diffs":[[0,"teTimeProperty('"],[-1,"4"],[1,"5"],[0,"', required=True"]],"start1":16563,"start2":16563,"length1":33,"length2":33}]],"length":28671,"saved":false}
{"ts":1375706393139,"patch":[[{"diffs":[[0,")\n    \n\n"],[-1,"\n"],[0,"class Cu"]],"start1":16596,"start2":16596,"length1":17,"length2":16}]],"length":28670,"saved":false}
{"ts":1375706476646,"patch":[[{"diffs":[[0,"    "],[-1,"store = ndb.KeyProperty('1', kind=Store, required=True)"],[0,"\n   "]],"start1":15884,"start2":15884,"length1":63,"length2":8}]],"length":28615,"saved":false}
{"ts":1375706485098,"patch":[[{"diffs":[[0," indexed=False)\n"],[1,"    store = ndb.KeyProperty('1', kind=Store, required=True)\n"],[0,"\n\nclass BuyerCol"]],"start1":15802,"start2":15802,"length1":32,"length2":92}]],"length":28675,"saved":false}
{"ts":1375706491865,"patch":[[{"diffs":[[0,", kind=Store, re"],[-1,"quir"],[1,"peat"],[0,"ed=True)\n\n\nclass"]],"start1":15849,"start2":15849,"length1":36,"length2":36}]],"length":28675,"saved":false}
{"ts":1375706551628,"patch":[[{"diffs":[[0,"    "],[-1,"store = ndb.KeyProperty('1', kind=Store, repeated=True)"],[0,"\n\n\nc"]],"start1":15818,"start2":15818,"length1":63,"length2":8}]],"length":28620,"saved":false}
{"ts":1375706557451,"patch":[[{"diffs":[[0,"or User\n    "],[1,"store = ndb.KeyProperty('1', kind=Store, repeated=True)"],[0,"\n    collect"]],"start1":15881,"start2":15881,"length1":24,"length2":79}]],"length":28675,"saved":false}
{"ts":1375706562142,"patch":[[{"diffs":[[0,")\n    \n\n"],[-1,"\n"],[0,"class Bu"]],"start1":15816,"start2":15816,"length1":17,"length2":16}]],"length":28674,"saved":false}
{"ts":1375706618715,"patch":[[{"diffs":[[0," indexed=False)\n"],[-1,"    "],[0,"\n\nclass BuyerCol"]],"start1":15802,"start2":15802,"length1":36,"length2":32}]],"length":28670,"saved":false}
{"ts":1375706660182,"patch":[[{"diffs":[[0,"nd=Store, re"],[-1,"peat"],[1,"quir"],[0,"ed=True)\n   "]],"start1":15919,"start2":15919,"length1":28,"length2":28}]],"length":28670,"saved":false}
{"ts":1375706704189,"patch":[[{"diffs":[[0,"ooleanProperty('"],[-1,"3"],[1,"2"],[0,"', default=False"]],"start1":15709,"start2":15709,"length1":33,"length2":33}]],"length":28670,"saved":false}
{"ts":1375706706560,"patch":[[{"diffs":[[0,"StringProperty('"],[-1,"4"],[1,"3"],[0,"', required=True"]],"start1":15768,"start2":15768,"length1":33,"length2":33}]],"length":28670,"saved":false}
